package Interface;

import Console.ConsoleFrame;
import Networking.Client.ConnectionHandler;
import Networking.Server.Player;
import java.awt.Color;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Dragos-Alexandru
 */
public class MultiplayerLanPanel extends javax.swing.JPanel {

    private final MainFrame rootFrame;
    
    /**
     * Creates new form MultiplayerLanPanel
     * @param rootFrame
     */
    public MultiplayerLanPanel(MainFrame rootFrame) {
        
        this.rootFrame = rootFrame;
        
        initComponents();
        Player.getInstance().logOut();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        connectButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        adressField = new javax.swing.JTextField();
        passwordField = new javax.swing.JTextField();
        adress = new javax.swing.JLabel();
        password = new javax.swing.JLabel();
        portNumberField = new javax.swing.JTextField();
        portNumber = new javax.swing.JLabel();
        playerNameField = new javax.swing.JTextField();
        playerNameLabel = new javax.swing.JLabel();
        createServerButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(600, 400));
        setMinimumSize(new java.awt.Dimension(600, 400));

        connectButton.setBackground(new java.awt.Color(255, 255, 255));
        connectButton.setText("Connect");
        connectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectButtonActionPerformed(evt);
            }
        });

        backButton.setBackground(new java.awt.Color(255, 255, 255));
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        adress.setText("Internet adress:");

        password.setText("Server password:");

        portNumber.setText("Port number:");

        playerNameLabel.setText("Player name:");

        createServerButton.setBackground(new java.awt.Color(255, 255, 255));
        createServerButton.setText("Create server");
        createServerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createServerButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(adress, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(password, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(portNumber, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(playerNameLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(playerNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                            .addComponent(portNumberField)
                            .addComponent(passwordField)
                            .addComponent(adressField)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(createServerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(connectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)))
                .addGap(175, 175, 175))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(playerNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(playerNameLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(adress))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(password))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(portNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(portNumber))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(connectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(createServerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void connectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectButtonActionPerformed
        if(!checkPlayerName())
            return;
        String ip = adressField.getText();
        if (!ip.isEmpty()) {
            try {
                Player.getInstance().setUsername(playerNameField.getText());
                ConnectionHandler.getInstance().connectToMatch(ip, Integer.parseInt(portNumberField.getText()));
                List<String> playerStateList =  
                        (List<String>)ConnectionHandler.getInstance().readFromMatch();
                rootFrame.changePanel(new MultiplayerMatchPanel(rootFrame, playerStateList));
            } catch (ClassNotFoundException | IOException ex) {
                Logger.getLogger(MultiplayerLanPanel.class.getName()).log(Level.SEVERE, null, ex);
                ConsoleFrame.showError("Failed to connect to match.");
            }
        } else {
            ConsoleFrame.showError("Invalid IP or port.");
        }
        
    }//GEN-LAST:event_connectButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        rootFrame.changePanel(new MultiplayerChooserPanel(rootFrame));
    }//GEN-LAST:event_backButtonActionPerformed

    private void createServerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createServerButtonActionPerformed
        if(!checkPlayerName())
            return;
        Player.getInstance().setUsername(playerNameField.getText());
        rootFrame.changePanel(new MultiplayerCreateMatch(rootFrame));
    }//GEN-LAST:event_createServerButtonActionPerformed
    
    /**
     * Returns true if the player has put a valid name
     * @return 
     */
    private boolean checkPlayerName(){
        String playerName = playerNameField.getText();
        
        if(playerName.isEmpty()){
            JOptionPane.showMessageDialog(null, "You must choose a player name", "Must have a player name", JOptionPane.WARNING_MESSAGE);
            playerNameLabel.setForeground(Color.RED);
            return false;
        }
        
        playerNameLabel.setForeground(Color.BLACK);
        
        return true;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel adress;
    private javax.swing.JTextField adressField;
    private javax.swing.JButton backButton;
    private javax.swing.JButton connectButton;
    private javax.swing.JButton createServerButton;
    private javax.swing.JLabel password;
    private javax.swing.JTextField passwordField;
    private javax.swing.JTextField playerNameField;
    private javax.swing.JLabel playerNameLabel;
    private javax.swing.JLabel portNumber;
    private javax.swing.JTextField portNumberField;
    // End of variables declaration//GEN-END:variables
}
